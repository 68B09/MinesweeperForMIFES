; MIFES11用「マ○ンスイーパーもどき」マクロソースファイル
; Ver 1.0 copyright(c) 2023.2.25 zzo
; 1st release
;
; Ver 1.1 copyright(c) 2023.3.1 zzo
; 周囲空け対応
;
; マクロの不具合などにより発生した事故などについて誰も責任を負いません。
; 自己責任であることを承知した上で使用してください。

*mine マ○ンスイーパーもどき
	MILW_UNICODE

	@@31 = 0

	; モノスペースフォント以外ではレイアウトが崩れます。
	; 挿入モードなどを変更します。

	if (@@31 == 0) && (@text != -1)
		@@1 = messagebox("間違って消したり変更されたりしないように、【全てのファイルを閉じてから実行してください】。\r\nまた、挿入モードなども変更されるので注意してください。", "マ○ンスイーパーもどき", MB_OK | MB_ICONINFORMATION)
		exit()
	endif

	; @@1～@@9	汎用
	; @@10		乱数生成変数A
	; @@11		乱数生成変数B
	; @@12		乱数生成変数M
	; @@13		乱数
	; @@15		横マス数
	; @@16		縦マス数
	; @@17		総マス数
	; @@18		機雷数
	; @@19		横位置 0～
	; @@20		縦位置 0～
	; @@21		要素インデックス
	; @@22		@@str7インデックス
	; @@23		残りの機雷数
	; @@31		デバッグモード 0=通常モード

	; @@str1	汎用文字列
	; @@str2	汎用文字列
	; @@str3	機雷マップ '　'=安全地帯 その他=機雷
	; @@str4	周囲機雷数 '０'～'９'
	; @@str5	オープン状態 '■'=隠し '☒'=マーク '　'=安全地帯
	; @@str6	周囲インデックスオフセット
	;			X [ 0]=左上 [ 1]=上 [ 2]=右上 [ 3]=左 [ 4]=自位置 [ 5]=右 [ 6]=左下 [ 7]=下 [ 8]=右下
	;			Y [10]=左上 [11]=上 [12]=右上 [13]=左 [14]=自位置 [15]=右 [16]=左下 [17]=下 [18]=右下
	;			  [20]～[28](左上～右下)=周辺の要素インデックス(65535=無効)
	; @@str7	連鎖オープンワーク
	; @@str8	仮想キー群

	; 乱数初期化
	@@10 = 16598013
	@@11 = 12820163
	@@12 = 16777216
	calldll1("kernel32.dll","GetSystemTime", @@str1)
	@@13 = @@str1[7]				; @@str1[7]=ミリ秒

	; 盤面サイズと機雷数設定
	@@15 = 20
	@@16 = 20
	@@17 = @@15 * @@16
	@@18 = (@@17 * 175) / 1000		; 175=17.5%

	; 周囲アクセス用オフセットX、Y方向
	@@1 = 0
	@@str6[@@1++] = 1 + -1
	@@str6[@@1++] = 1 + 0
	@@str6[@@1++] = 1 + 1
	@@str6[@@1++] = 1 + -1
	@@str6[@@1++] = 1 + 0
	@@str6[@@1++] = 1 + 1
	@@str6[@@1++] = 1 + -1
	@@str6[@@1++] = 1 + 0
	@@str6[@@1++] = 1 + 1

	@@1 = 10
	@@str6[@@1++] = 1 + -1
	@@str6[@@1++] = 1 + -1
	@@str6[@@1++] = 1 + -1
	@@str6[@@1++] = 1 + 0
	@@str6[@@1++] = 1 + 0
	@@str6[@@1++] = 1 + 0
	@@str6[@@1++] = 1 + 1
	@@str6[@@1++] = 1 + 1
	@@str6[@@1++] = 1 + 1

	goto :main

; デバッグ用変数表示
:debug
	if @@31 != 0
		@line = @@16 + 4
		@col = 1
		execmd(11)
		sprintf(@@str1,"x:%d y:%d idx:%d mark:%X mine:%d", @@19, @@20, @@21, @@str3[@@21], @@18)
		insstr(@@str1)
	endif
	return

; 乱数生成
:rand
	@@13 = (@@10 * @@13 + @@11) % @@12
	return

; 盤面表示
:drawmap
	@insmode = 0	; 上書きモード
	@disp = 0
	@20 = 0
	@@1 = 0
	while @20 < @@16
		@line = @20 + 1
		@19 = 0
		while @19 < @@15
			@col = @19 * 2 + 1
			@code = @@str5[@@1]

			if @@31 != 0
				@col = (@19 + @@15 + 1) * 2 + 1
				@code = @@str3[@@1]

				@col = (@19 + (@@15 + 1) * 2) * 2 + 1
				@code = @@str4[@@1]
			endif

			@19++
			@@1++
		wend
		@20++
	wend

	; ステータス表示
	@line = @@16 + 2
	@col = 1
	execmd(11)
	sprintf(@@str1,"＊=%d", @@23)
	insstr(@@str1)

	return

; カーソル設定
:setcursor
	@line = @@20 + 1
	@col = @@19 * 2 + 1
	return

; 終了判定 @@1=1(終了)
:iscomplete
	@@1 = 0

	@@2 = 0
	while @@2 < @@17
		if (@@str3[@@2] == '　') && ((@@str5[@@2] == '■') || (@@str5[@@2] == '☒'))
			return
		endif
		@@2++
	wend

	@@1 = 1
	return

; @@2で示される要素インデックス周囲の要素インデックスを作成
:makeareaindex
	@@9 = 0
	while @@9 < 9
		@@4 = (@@2 % @@15) + @@str6[@@9] - 1		; 周囲X位置
		@@5 = (@@2 / @@15) + @@str6[10 + @@9] - 1	; 周囲Y位置
		if ((@@4 >= 0) && (@@4 < @@15) && (@@5 >= 0) && (@@5 < @@16))
			@@str6[20 + @@9] = @@4 + (@@5 * @@15)
		else
			@@str6[20 + @@9] = 65535
		endif
		@@9++
	wend
	return

; 指定位置を開く
; @@str7	[0]を先頭にしてセル番号を格納。65535は削除マーク
; @@22 		@@str7要素数
:open
	while true
		; 処理対象とする要素番号を取り出す
		@@1 = 0
		@@2 = -1	; 処理対象要素番号
		while @@1 < @@22
			if (@@str7[@@1] != 65535)
				; 要素番号を見つけた
				@@2 = @@str7[@@1]
				@@str7[@@1] = 65535		; 削除する

				; 登録数を更新
				while (@@22 > 0)
					if (@@str7[@@22 - 1] != 65535)
						break
					endif
					@@22--
				wend
				break

			endif

			@@1++
		wend

		; 見つからなかったら処理終了
		if (@@2 == -1)
			break
		endif

		; 指定された位置が開封済みなら何もしない
		if (@@str5[@@2] != '■')
			continue
		endif

		; 開く
		; 周囲に機雷があるなら機雷数、なければ空白をセット
		if(@@str4[@@2] == '０')
			@@str5[@@2] = '　'
		else
			@@str5[@@2] = @@str4[@@2]
		endif

		if (@@str4[@@2] == '０')
			; 周囲に機雷が無いので連鎖で開けていく
			@@3 = 0	; 周囲にアクセスするためのオフセットを取得するためのカウンタ
			while (@@3 < 9)	; 自身を含めて9マスを見る
				gosub :makeareaindex
				;@@4 = (@@2 % @@15) + @@str6[@@3] - 1		; 周囲X位置
				;@@5 = (@@2 / @@15) + @@str6[10 + @@3] - 1	; 周囲Y位置
				;@@6 = @@4 + (@@5 * @@15)					; 周囲要素番号
				@@6 = @@str6[20+@@3]						; 周囲要素番号
				;if ((@@4 >= 0) && (@@4 < @@15) && (@@5 >= 0) && (@@5 < @@16) && (@@6 != @@2))
				if ((@@6 != 65535) && (@@6 != @@2))
					; 盤内、かつ、自身以外

					; このセルの要素番号を記録する
					@@1 = 0
					@@7 = -1		; 格納位置
					while (@@1 < @@22)
						if (@@str7[@@1] == 65535)
							; 空き屋の位置を一度だけ記録する
							if (@@7 == -1)
								@@7 = @@1
							endif
						else if (@@str7[@@1] == @@6)
							; 同じ要素番号を見つけたのでココに格納する(上書き)ことにする
							@@7 = @@1
							break
						endif

						@@1++
					wend

					if (@@1 >= @@22)
						; 格納先が見つからなかった
						if (@@22 >= 2048 - 1)
							; もう格納できない
							messagebox("m(__)m\r\nスタックオーバーフロー。\r\nゲームウィンドを閉じてください。", "通知", MB_OK | MB_ICONINFORMATION)
							exit()
						endif
						@@7 = @@22++	; 消費量を足す
					endif

					if(@@7 >= 0)
						@@str7[@@7] = @@6
					endif
				endif

				@@3++
			wend
		endif
	wend
	return

; これより上はサブルーチン
:main
	newopen()

	; 文字が表示される位置にあらかじめ文字を書いておく
	@@1 = 0
	@@2 = @@15
	if @@31 != 0
		@@2 = @@2 * 3 + 3
	endif
	while @@1 < @@2
		@@str1[@@1] = '　'
		@@1++
	wend
	@@str1[@@1] = 0x00
	@@1 = 0
	while @@1 < @@16
		insstr(@@str1)
		insstr(0x000d000a)
		@@1++
	wend

	insstr(0x000d000a)	; 空行
	insstr(0x000d000a)	; ステータス行
	insstr("[A]開ける [S]=マークを信じて空ける [D]マーク切換 [←↑↓→]移動 [ESC]終了")	; キー操作
	insstr(0x000d000a)	; デバッグ
	insstr(0x000d000a)	; デバッグ

; ゲームスタート
:start
	; 初期カーソル位置を中心に
	@@19 = @@15 / 2
	@@20 = @@16 / 2

	; 機雷マップと周囲機雷数をクリア
	@@1 = 0
	while @@1 < @@17
		@@str3[@@1] = '　'
		@@str4[@@1] = '０'
		@@1++
	wend

	; 機雷設置
	@@1 = 0
	while @@1 < @@18
		gosub :rand
		@@2 = @@13 % @@17
		if @@str3[@@2] == '　'
			@@str3[@@2] = '＊'
			@@1++
		endif
	wend

	; 周囲機雷数設定
	@@1 = 0
	while @@1 < @@17
		if @@str3[@@1] == '　'
			@@3 = 0
			while @@3 < 9
				@@4 = (@@1 % @@15) + @@str6[@@3] - 1		; x
				@@5 = (@@1 / @@15) + @@str6[10 + @@3] - 1	; y
				if (@@4 >= 0) && (@@4 < @@15) && (@@5 >= 0) && (@@5 < @@16) && (@@3 != 4)
					@@6 = @@4 + (@@5 * @@15)
					if @@str3[@@6] != '　'
						@@str4[@@1] = @@str4[@@1] + 1
					endif
				endif
				@@3++
			wend
		endif

		@@1++
	wend

	@@23 = @@18	; 残り機雷数

	; 未オープン状態へ設定
	@@1 = 0
	while @@1 < @@17
		@@str5[@@1] = '■'
		@@1++
	wend

:draw
	gosub :drawmap

:input
	; カーソル設定
	@insmode = 0	; 上書きモード
	@@21 = @@19 + (@@20 * @@15)
	gosub :debug
	gosub :setcursor
	@disp = 2

	; 終了チェック
	gosub :iscomplete
	if @@1 == 1
		messagebox("🎉 Congratulations! 👍", "おめでとうございます", MB_OK | MB_ICONINFORMATION)
		goto :start
	endif

	; キー入力
	message("キー入力待ち")
	@@1 = 0
	@@str8[@@1++] = VK_ESC
	@@str8[@@1++] = VK_UP
	@@str8[@@1++] = VK_DOWN
	@@str8[@@1++] = VK_LEFT
	@@str8[@@1++] = VK_RIGHT
	@@str8[@@1++] = 0x00
	@@1 = waitevent(EVENT_VK | EVENT_CHAR, @@str8)
	message("")
	@insmode = 1	; 挿入モード

	if @@1 == EVENT_VK
		if @key == VK_ESC
			messagebox("ゲーム終了。\r\nゲームウィンドを閉じてください。", "通知", MB_OK | MB_ICONINFORMATION)
			exit()
		else if @key == VK_UP
			@@20 = (@@20 - 1 + @@16) % @@16
			goto :draw
		else if @key == VK_DOWN
			@@20 = (@@20 + 1) % @@16
			goto :draw
		else if @key == VK_LEFT
			@@19 = (@@19 - 1 + @@15) % @@15
			goto :draw
		else if @key == VK_RIGHT
			@@19 = (@@19 + 1) % @@15
			goto :draw
		endif
	else if @@1 == EVENT_CHAR
		if (@char == 'A') || (@char == 'a')
			; 現位置を開く
			if @@str5[@@21] == '■'
				if @@str3[@@21] != '　'
					goto :dead
				endif

				@@1 = 0
				while @@1 < 2048
					@@str7[@@1++] = 65535
				wend
				@@22 = 0
				@@str7[@@22++] = @@21
				gosub :open

				goto :draw
			else if (@@str5[@@21] >= '０') && (@@str5[@@21] <= '９')
				; 何もしない
			else if (@@str5[@@21] == '☒')
				; 何もしない
			endif
		else if (@char == 'D') || (@char == 'd')
			; マーク状態切換
			if @@str5[@@21] == '■'
				@@str5[@@21] = '☒'
				@@23--
				goto :draw
			else if @@str5[@@21] == '☒'
				@@str5[@@21] = '■'
				@@23++
				goto :draw
			endif
		else if (@char == 'S') || (@char == 's')
			; マークした箇所を信じて開く
			@@1 = @@str5[@@21]
			if (@@1 < '０') || (@@1 > '９')
				goto :input
			endif
			@@1 = @@1 - '０'

			; 周囲のマーク数をチェック
			@@2 = @@21
			gosub :makeareaindex

			@@3 = 0
			@@4 = 0		; マークされていない機雷の数
			@@22 = 0
			while @@3 < 9
				if @@str6[20 + @@3] < 65535
					if @@str5[@@str6[20 + @@3]] == '☒'
						@@1--
					endif

					if @@str5[@@str6[20 + @@3]] == '■'
						if @@str3[@@str6[20 + @@3]] != '　'
							@@4++
						endif
						@@str7[@@22++] = @@str6[20 + @@3]
					endif
				endif
				@@3++
			wend

			; マーク数不一致
			if @@1 != 0
				goto :input
			endif

			; ■の中に機雷があればゲームオーバー
			if @@4 > 0
				goto :dead
			endif

			gosub :open
			goto :draw
		endif
	endif
	goto :input

:dead
	@@1 = 0
	while @@1 < @@17
		if @@str3[@@1] != '　'
			@@str5[@@1] = '＊'
		endif
		@@1++
	wend

	gosub :drawmap
	gosub :setcursor
	@insmode = 1	; 挿入モード
	@disp = 2
	messagebox("💣 残念！ >_< 💣", "💣を踏んでしまいました", MB_OK | MB_ICONINFORMATION)
	goto :start
